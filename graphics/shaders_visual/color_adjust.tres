[gd_resource type="VisualShader" load_steps=12 format=2]

[sub_resource type="VisualShaderNodeScalarOp" id=1]

[sub_resource type="VisualShaderNodeScalarOp" id=2]

[sub_resource type="VisualShaderNodeVectorCompose" id=3]

[sub_resource type="VisualShaderNodeVec3Uniform" id=4]
uniform_name = "Delta"

[sub_resource type="VisualShaderNodeTexture" id=5]
source = 2

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarConstant" id=7]
constant = 255.0

[sub_resource type="VisualShaderNodeVectorOp" id=8]
operator = 3

[sub_resource type="VisualShaderNodeVectorDecompose" id=9]

[sub_resource type="VisualShaderNodeVectorDecompose" id=10]

[sub_resource type="VisualShaderNodeScalarOp" id=11]

[resource]
code = "shader_type canvas_item;
uniform vec3 Delta;



void vertex() {
// Output:0

}

void fragment() {
// Input:4
	vec3 n_out4p0;
	n_out4p0 = vec3(UV,0.0);

// Texture:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 _tex_read = texture( TEXTURE , n_out4p0.xy );
		n_out3p0 = _tex_read.rgb;
		n_out3p1 = _tex_read.a;
	}

// VectorDecompose:8
	float n_out8p0;
	float n_out8p1;
	float n_out8p2;
	n_out8p0 = n_out3p0.x;
	n_out8p1 = n_out3p0.y;
	n_out8p2 = n_out3p0.z;

// VectorUniform:2
	vec3 n_out2p0;
	n_out2p0 = Delta;

// Scalar:5
	float n_out5p0;
	n_out5p0 = 255.000000;

// VectorOp:6
	vec3 n_out6p0;
	n_out6p0 = n_out2p0 / vec3(n_out5p0);

// VectorDecompose:7
	float n_out7p0;
	float n_out7p1;
	float n_out7p2;
	n_out7p0 = n_out6p0.x;
	n_out7p1 = n_out6p0.y;
	n_out7p2 = n_out6p0.z;

// ScalarOp:9
	float n_out9p0;
	n_out9p0 = n_out8p0 + n_out7p0;

// ScalarOp:10
	float n_out10p0;
	n_out10p0 = n_out8p1 + n_out7p1;

// ScalarOp:11
	float n_out11p0;
	n_out11p0 = n_out8p2 + n_out7p2;

// VectorCompose:13
	vec3 n_out13p0;
	n_out13p0 = vec3( n_out9p0 , n_out10p0 , n_out11p0 );

// Output:0
	COLOR.rgb = n_out13p0;
	COLOR.a = n_out3p1;

}

void light() {
// Output:0

}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 1300, 540 )
nodes/fragment/2/node = SubResource( 4 )
nodes/fragment/2/position = Vector2( -740, -20 )
nodes/fragment/3/node = SubResource( 5 )
nodes/fragment/3/position = Vector2( -420, 500 )
nodes/fragment/4/node = SubResource( 6 )
nodes/fragment/4/position = Vector2( -680, 500 )
nodes/fragment/5/node = SubResource( 7 )
nodes/fragment/5/position = Vector2( -740, 160 )
nodes/fragment/6/node = SubResource( 8 )
nodes/fragment/6/position = Vector2( -420, 20 )
nodes/fragment/7/node = SubResource( 9 )
nodes/fragment/7/position = Vector2( 0, 60 )
nodes/fragment/8/node = SubResource( 10 )
nodes/fragment/8/position = Vector2( 0, 260 )
nodes/fragment/9/node = SubResource( 11 )
nodes/fragment/9/position = Vector2( 480, -120 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 480, 120 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 480, 360 )
nodes/fragment/13/node = SubResource( 3 )
nodes/fragment/13/position = Vector2( 860, 120 )
nodes/fragment/connections = PoolIntArray( 4, 0, 3, 0, 3, 1, 0, 1, 5, 0, 6, 1, 2, 0, 6, 0, 6, 0, 7, 0, 3, 0, 8, 0, 7, 1, 10, 1, 8, 1, 10, 0, 7, 0, 9, 1, 8, 0, 9, 0, 8, 2, 11, 0, 7, 2, 11, 1, 9, 0, 13, 0, 10, 0, 13, 1, 11, 0, 13, 2, 13, 0, 0, 0 )
